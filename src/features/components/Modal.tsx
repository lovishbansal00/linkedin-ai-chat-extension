import { useState, type KeyboardEvent } from "react"

import generateButton from "../../../assets/generate.svg"
import insertButton from "../../../assets/insert.svg"
import regenerateButton from "../../../assets/regenerate.svg"

const Modal = ({ showModal, setShowModal }) => {
  const [firstGeneration, setFirstGeneration] = useState<boolean>(true)
  const [prompt, setPrompt] = useState<string>("")
  const response =
    "This is a static response by Lovish Bansal, not generated by the API call!!"

  const [conversation, setConversation] = useState([])

  const handleGenerate = () => {
    setConversation([...conversation, { prompt: prompt, response: response }])
    setPrompt("")
  }

  const handleOnSubmit = () => {
    const messageBox = document.querySelector(".msg-form__contenteditable")
    messageBox.children[0].innerHTML = response

    const placeholderElement = document.querySelector(".msg-form__placeholder")
    placeholderElement.setAttribute("data-placeholder", "")
    placeholderElement.textContent = ""
  }

  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      // e.preventDefault()
      setFirstGeneration(false)
      handleGenerate()
    }
  }

  return (
    <>
      {showModal ? (
        <>
          <div className="flex justify-center items-center overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none bg-gray-900 bg-opacity-50">
            <div className="relative w-auto my-6 mx-auto rounded-2xl shadow-md">
              <div className="shadow-lg relative flex flex-col w-[420px] bg-white outline-none focus:outline-none py-6 border border-gray-200 rounded-md">
                {conversation && (
                  <div className="flex flex-col px-6 pb-4 max-h-64 gap-3 overflow-y-auto">
                    {conversation.map((item, index) => (
                      <div
                        key={index}
                        className="flex flex-col justify-center gap-3 ">
                        <div className="border text-lg px-2 py-4 bg-gray-200 rounded-md self-end text-wrap break-all w-2/3">
                          {item.prompt}
                        </div>
                        <div className="border text-lg px-2 py-4 bg-blue-200 rounded-md self-start text-wrap w-2/3  break-all">
                          {item.response}
                        </div>
                      </div>
                    ))}
                  </div>
                )}
                <div className="relative px-6 flex-auto py-2">
                  <input
                    className="shadow text-xl rounded border w-full py-2 px-1 text-black"
                    placeholder="Your prompt"
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    onKeyDown={handleKeyDown}
                  />
                </div>
                <div className="flex gap-2 items-center justify-end px-6 my-4 border-black-200 rounded">
                  {!firstGeneration && (
                    <button
                      className="flex gap-2 text-gray-500 px-3 py-2 text-lg mr-1 mb-1 items-center border rounded-md"
                      type="button"
                      onClick={() => {
                        setShowModal(false)
                        handleOnSubmit()
                      }}>
                      <img src={insertButton} alt="" className="h-5 w-5" />
                      <p className="font-semibold text-xl">Insert</p>
                    </button>
                  )}
                  <button
                    className="text-white bg-blue-500 text-xl font-semibold px-3 py-2 rounded-md mr-1 mb-1"
                    type="button"
                    disabled={prompt.length === 0}
                    onClick={() => {
                      setFirstGeneration(false)
                      handleGenerate()
                    }}>
                    {firstGeneration ? (
                      <div className="flex flex-row gap-2 justify-center items-center">
                        <img
                          src={generateButton}
                          alt="generateButton"
                          className="h-5 w-5"
                        />
                        <p>Generate</p>
                      </div>
                    ) : (
                      <div className="flex flex-row gap-2 justify-center items-center">
                        <img
                          src={regenerateButton}
                          alt="regenrateButton"
                          className="h-5 w-5"
                        />
                        <p>Regenerate</p>
                      </div>
                    )}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </>
      ) : null}
    </>
  )
}

export default Modal
